section .data
    msg db "Number: ", 0Ah ; сообщение для вывода на экран
    len equ $-msg ; вычисляем длину сообщения
    res dw 7

section .bss
    num resb 2 ; зарезервируем 2 байта для введенного числа

section .text
    global _start

_start:
    ; выводим сообщение на экран
    mov eax, 4 ; системный вызов для вывода на экран
    mov ebx, 1 ; дескриптор вывода - экран
    mov ecx, msg ; адрес сообщения
    mov edx, len ; длина сообщения
    int 0x80 ; вызываем системный вызов

    ; считываем число с клавиатуры
    mov eax, 3 ; системный вызов для чтения ввода с клавиатуры
    mov ebx, 0 ; дескриптор ввода - клавиатура
    mov ecx, num ; адрес переменной для сохранения ввода
    mov edx, 2 ; максимальная длина ввода - 2 байта
    int 0x80 ; вызываем системный вызов

    ; выводим введенное число на экран
    mov eax, 4 ; системный вызов для вывода на экран
    mov ebx, 1 ; дескриптор вывода - экран
    mov ecx, num ; адрес переменной с введенным числом
    ; add ecx, [res]
    mov edx, 2 ; длина введенного числа - 2 байта
    int 0x80 ; вызываем системный вызов

    ; завершаем программу
    mov eax, 1 ; системный вызов для завершения программы
    xor ebx, ebx ; возвращаем 0 как код завершения программы
    int 0x80 ; вызываем системный вызов